name: Automated Builds

on:
  push:
    branches:
      - master

jobs:
  build:
    name: HubOS
    runs-on: ubuntu-latest
    steps:
      - name: Generate token
        id: generate_token
        uses: tibdex/github-app-token@v1
        with:
          app_id: ${{ secrets.APP_ID }}
          private_key: ${{ secrets.APP_PRIVATE_KEY }}

      - uses: actions/checkout@v4
        with:
          submodules: true
          token: ${{ steps.generate_token.outputs.token }}

      - uses: dtolnay/rust-toolchain@stable
        with:
          targets: x86_64-pc-windows-gnu

      - name: Install Linux Dependencies
        run: sudo apt-get update && sudo apt-get install -y mingw-w64 libasound2-dev libudev-dev libxcb-xfixes0-dev libxcb-shape0-dev

      - uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/bin/
            ~/.cargo/registry/index/
            ~/.cargo/registry/cache/
            ~/.cargo/git/db/
            ~/.cargo/.crates.toml
            ~/.cargo/.crates2.json
            target/
          key: ${{ runner.os }}-cargo-${{ hashFiles('Cargo.lock') }}
          restore-keys: ${{ runner.os }}-cargo

      - name: Install Cargo About
        run: cargo install cargo-about --version=^0.5

      - name: Make Release Folder
        run: mkdir -p target/release

      - name: Build Windows Client
        run: cargo build -p hub_os --release --target x86_64-pc-windows-gnu

      - name: Build Windows Server
        run: cargo build -p hub_os_server --release --target x86_64-pc-windows-gnu

      - name: Copy Windows Executables
        run: |
          cp target/x86_64-pc-windows-gnu/release/hub_os.exe target/release/hub_os.exe
          cp target/x86_64-pc-windows-gnu/release/hub_os_server.exe target/release/hub_os_server.exe

      - name: Build Linux Executables and Create Dist
        run: cargo run --bin dist

      - name: Archive
        uses: actions/upload-artifact@v3
        with:
          name: dist
          path: dist

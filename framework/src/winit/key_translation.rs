use crate::prelude::*;
use winit::event::VirtualKeyCode as WinitKeyCode;

pub(super) fn translate_winit_key(winit_key: WinitKeyCode) -> Option<Key> {
    match winit_key {
        WinitKeyCode::Grave => Some(Key::Backquote),
        WinitKeyCode::Key1 => Some(Key::Key1),
        WinitKeyCode::Key2 => Some(Key::Key2),
        WinitKeyCode::Key3 => Some(Key::Key3),
        WinitKeyCode::Key4 => Some(Key::Key4),
        WinitKeyCode::Key5 => Some(Key::Key5),
        WinitKeyCode::Key6 => Some(Key::Key6),
        WinitKeyCode::Key7 => Some(Key::Key7),
        WinitKeyCode::Key8 => Some(Key::Key8),
        WinitKeyCode::Key9 => Some(Key::Key9),
        WinitKeyCode::Key0 => Some(Key::Key0),
        WinitKeyCode::Minus => Some(Key::Minus),
        WinitKeyCode::Equals => Some(Key::Equals),
        WinitKeyCode::Back => Some(Key::Backspace),
        WinitKeyCode::Numpad1 => Some(Key::Numpad1),
        WinitKeyCode::Numpad2 => Some(Key::Numpad2),
        WinitKeyCode::Numpad3 => Some(Key::Numpad3),
        WinitKeyCode::Numpad4 => Some(Key::Numpad4),
        WinitKeyCode::Numpad5 => Some(Key::Numpad5),
        WinitKeyCode::Numpad6 => Some(Key::Numpad6),
        WinitKeyCode::Numpad7 => Some(Key::Numpad7),
        WinitKeyCode::Numpad8 => Some(Key::Numpad8),
        WinitKeyCode::Numpad9 => Some(Key::Numpad9),
        WinitKeyCode::Numpad0 => Some(Key::Numpad0),
        WinitKeyCode::NumpadAdd => Some(Key::NumpadPlus),
        WinitKeyCode::NumpadDivide => Some(Key::NumpadDivide),
        WinitKeyCode::NumpadDecimal => Some(Key::NumpadDecimal),
        WinitKeyCode::NumpadComma => Some(Key::NumpadComma),
        WinitKeyCode::NumpadEnter => Some(Key::NumpadEnter),
        WinitKeyCode::NumpadEquals => Some(Key::NumpadEquals),
        WinitKeyCode::NumpadMultiply => Some(Key::NumpadMultiply),
        WinitKeyCode::NumpadSubtract => Some(Key::NumpadMinus),
        WinitKeyCode::A => Some(Key::A),
        WinitKeyCode::B => Some(Key::B),
        WinitKeyCode::C => Some(Key::C),
        WinitKeyCode::D => Some(Key::D),
        WinitKeyCode::E => Some(Key::E),
        WinitKeyCode::F => Some(Key::F),
        WinitKeyCode::G => Some(Key::G),
        WinitKeyCode::H => Some(Key::H),
        WinitKeyCode::I => Some(Key::I),
        WinitKeyCode::J => Some(Key::J),
        WinitKeyCode::K => Some(Key::K),
        WinitKeyCode::L => Some(Key::L),
        WinitKeyCode::M => Some(Key::M),
        WinitKeyCode::N => Some(Key::N),
        WinitKeyCode::O => Some(Key::O),
        WinitKeyCode::P => Some(Key::P),
        WinitKeyCode::Q => Some(Key::Q),
        WinitKeyCode::R => Some(Key::R),
        WinitKeyCode::S => Some(Key::S),
        WinitKeyCode::T => Some(Key::T),
        WinitKeyCode::U => Some(Key::U),
        WinitKeyCode::V => Some(Key::V),
        WinitKeyCode::W => Some(Key::W),
        WinitKeyCode::X => Some(Key::X),
        WinitKeyCode::Y => Some(Key::Y),
        WinitKeyCode::Z => Some(Key::Z),
        WinitKeyCode::Escape => Some(Key::Escape),
        WinitKeyCode::F1 => Some(Key::F1),
        WinitKeyCode::F2 => Some(Key::F2),
        WinitKeyCode::F3 => Some(Key::F3),
        WinitKeyCode::F4 => Some(Key::F4),
        WinitKeyCode::F5 => Some(Key::F5),
        WinitKeyCode::F6 => Some(Key::F6),
        WinitKeyCode::F7 => Some(Key::F7),
        WinitKeyCode::F8 => Some(Key::F8),
        WinitKeyCode::F9 => Some(Key::F9),
        WinitKeyCode::F10 => Some(Key::F10),
        WinitKeyCode::F11 => Some(Key::F11),
        WinitKeyCode::F12 => Some(Key::F12),
        WinitKeyCode::F13 => Some(Key::F13),
        WinitKeyCode::F14 => Some(Key::F14),
        WinitKeyCode::F15 => Some(Key::F15),
        WinitKeyCode::F16 => Some(Key::F16),
        WinitKeyCode::F17 => Some(Key::F17),
        WinitKeyCode::F18 => Some(Key::F18),
        WinitKeyCode::F19 => Some(Key::F19),
        WinitKeyCode::F20 => Some(Key::F20),
        WinitKeyCode::F21 => Some(Key::F21),
        WinitKeyCode::F22 => Some(Key::F22),
        WinitKeyCode::F23 => Some(Key::F23),
        WinitKeyCode::F24 => Some(Key::F24),
        WinitKeyCode::Cut => Some(Key::Cut),
        WinitKeyCode::Copy => Some(Key::Copy),
        WinitKeyCode::Paste => Some(Key::Paste),
        WinitKeyCode::Tab => Some(Key::Tab),
        WinitKeyCode::Numlock => Some(Key::NumLock),
        WinitKeyCode::Capital => Some(Key::CapsLock),
        WinitKeyCode::Scroll => Some(Key::ScrollLock),
        WinitKeyCode::Pause => Some(Key::Pause),
        WinitKeyCode::Insert => Some(Key::Insert),
        WinitKeyCode::Delete => Some(Key::Delete),
        WinitKeyCode::Home => Some(Key::Home),
        WinitKeyCode::End => Some(Key::End),
        WinitKeyCode::PageUp => Some(Key::PageUp),
        WinitKeyCode::PageDown => Some(Key::PageDown),
        WinitKeyCode::LShift => Some(Key::LShift),
        WinitKeyCode::OEM102 => Some(Key::OEM102),
        WinitKeyCode::LControl => Some(Key::LControl),
        WinitKeyCode::LWin => Some(Key::LMeta),
        WinitKeyCode::LAlt => Some(Key::LAlt),
        WinitKeyCode::RAlt => Some(Key::RAlt),
        WinitKeyCode::RWin => Some(Key::RMeta),
        // missing from winit?, appears to be documented but not in this enum
        // https://osspial.github.io/winit/el2-win-keyboard/winit/event/keyboard/index.html
        // WinitKeyCode::Menu => Some(Key::Menu),
        WinitKeyCode::RControl => Some(Key::RControl),
        WinitKeyCode::RShift => Some(Key::RShift),
        WinitKeyCode::Left => Some(Key::Left),
        WinitKeyCode::Right => Some(Key::Right),
        WinitKeyCode::Up => Some(Key::Up),
        WinitKeyCode::Down => Some(Key::Down),
        WinitKeyCode::LBracket => Some(Key::LBracket),
        WinitKeyCode::RBracket => Some(Key::RBracket),
        WinitKeyCode::Colon => Some(Key::Colon),
        WinitKeyCode::Semicolon => Some(Key::Semicolon),
        WinitKeyCode::Apostrophe => Some(Key::Apostrophe),
        WinitKeyCode::Return => Some(Key::Return),
        WinitKeyCode::Space => Some(Key::Space),
        WinitKeyCode::Caret => Some(Key::Caret),
        WinitKeyCode::Asterisk => Some(Key::Asterisk),
        WinitKeyCode::At => Some(Key::At),
        WinitKeyCode::Calculator => Some(Key::Calculator),
        WinitKeyCode::Comma => Some(Key::Comma),
        WinitKeyCode::Period => Some(Key::Period),
        WinitKeyCode::Slash => Some(Key::Slash),
        WinitKeyCode::Backslash => Some(Key::Backslash),
        WinitKeyCode::Mail => Some(Key::Mail),
        WinitKeyCode::PlayPause => Some(Key::PlayPause),
        WinitKeyCode::MediaSelect => Some(Key::MediaSelect),
        WinitKeyCode::MediaStop => Some(Key::MediaStop),
        WinitKeyCode::PrevTrack => Some(Key::MediaPrev),
        WinitKeyCode::NextTrack => Some(Key::MediaNext),
        WinitKeyCode::Mute => Some(Key::Mute),
        WinitKeyCode::MyComputer => Some(Key::MyComputer),
        WinitKeyCode::WebFavorites => Some(Key::WebBookmarks),
        WinitKeyCode::WebBack => Some(Key::WebBack),
        WinitKeyCode::WebForward => Some(Key::WebForward),
        WinitKeyCode::WebHome => Some(Key::WebHome),
        WinitKeyCode::WebRefresh => Some(Key::WebRefresh),
        WinitKeyCode::WebSearch => Some(Key::WebSearch),
        WinitKeyCode::WebStop => Some(Key::WebStop),
        WinitKeyCode::Stop => Some(Key::Stop),
        WinitKeyCode::Plus => Some(Key::Plus),
        _ => None,
    }
}

use super::{AssetManager, LocalAssetManager, ResourcePaths, SoundBuffer};

#[derive(Default)]
pub struct GlobalSfx {
    pub start_game: SoundBuffer,
    pub cursor_move: SoundBuffer,
    pub cursor_select: SoundBuffer,
    pub cursor_cancel: SoundBuffer,
    pub cursor_error: SoundBuffer,
    pub menu_close: SoundBuffer,
    pub page_turn: SoundBuffer,
    pub text_blip: SoundBuffer,
    pub customize_start: SoundBuffer,
    pub customize_empty: SoundBuffer,
    pub customize_block: SoundBuffer,
    pub customize_complete: SoundBuffer,
    pub transmission: SoundBuffer,
    pub warp: SoundBuffer,
    pub battle_transition: SoundBuffer,
    pub appear: SoundBuffer,
    pub card_select_open: SoundBuffer,
    pub card_select_confirm: SoundBuffer,
    pub form_select_open: SoundBuffer,
    pub form_select_close: SoundBuffer,
    pub turn_gauge: SoundBuffer,
    pub time_freeze: SoundBuffer,
    pub tile_break: SoundBuffer,
    pub trap: SoundBuffer,
    pub shine: SoundBuffer,
    pub transform_select: SoundBuffer,
    pub transform: SoundBuffer,
    pub transform_revert: SoundBuffer,
    pub attack_charging: SoundBuffer,
    pub attack_charged: SoundBuffer,
    pub player_deleted: SoundBuffer,
    pub hurt: SoundBuffer,
    pub explode: SoundBuffer,
}

impl GlobalSfx {
    pub fn new(assets: &LocalAssetManager) -> Self {
        Self {
            start_game: assets.audio(ResourcePaths::START_GAME_SFX),
            cursor_move: assets.audio(ResourcePaths::CURSOR_MOVE_SFX),
            cursor_select: assets.audio(ResourcePaths::CURSOR_SELECT_SFX),
            cursor_cancel: assets.audio(ResourcePaths::CURSOR_CANCEL_SFX),
            cursor_error: assets.audio(ResourcePaths::CURSOR_ERROR_SFX),
            menu_close: assets.audio(ResourcePaths::MENU_CLOSE_SFX),
            page_turn: assets.audio(ResourcePaths::PAGE_TURN_SFX),
            text_blip: assets.audio(ResourcePaths::TEXT_BLIP_SFX),
            customize_start: assets.audio(ResourcePaths::CUSTOMIZE_START_SFX),
            customize_empty: assets.audio(ResourcePaths::CUSTOMIZE_EMPTY_SFX),
            customize_block: assets.audio(ResourcePaths::CUSTOMIZE_BLOCK_SFX),
            customize_complete: assets.audio(ResourcePaths::CUSTOMIZE_COMPLETE_SFX),
            transmission: assets.audio(ResourcePaths::TRANSMISSION_SFX),
            warp: assets.audio(ResourcePaths::WARP_SFX),
            battle_transition: assets.audio(ResourcePaths::BATTLE_TRANSITION_SFX),
            appear: assets.audio(ResourcePaths::APPEAR_SFX),
            card_select_open: assets.audio(ResourcePaths::CARD_SELECT_OPEN_SFX),
            card_select_confirm: assets.audio(ResourcePaths::CARD_SELECT_CONFIRM_SFX),
            form_select_open: assets.audio(ResourcePaths::FORM_SELECT_OPEN_SFX),
            form_select_close: assets.audio(ResourcePaths::FORM_SELECT_CLOSE_SFX),
            turn_gauge: assets.audio(ResourcePaths::TURN_GAUGE_SFX),
            time_freeze: assets.audio(ResourcePaths::TIME_FREEZE_SFX),
            tile_break: assets.audio(ResourcePaths::TILE_BREAK_SFX),
            trap: assets.audio(ResourcePaths::TRAP_SFX),
            shine: assets.audio(ResourcePaths::SHINE_SFX),
            transform_select: assets.audio(ResourcePaths::TRANSFORM_SELECT_SFX),
            transform: assets.audio(ResourcePaths::TRANSFORM_SFX),
            transform_revert: assets.audio(ResourcePaths::TRANSFORM_REVERT_SFX),
            attack_charging: assets.audio(ResourcePaths::ATTACK_CHARGING_SFX),
            attack_charged: assets.audio(ResourcePaths::ATTACK_CHARGED_SFX),
            player_deleted: assets.audio(ResourcePaths::PLAYER_DELETED_SFX),
            hurt: assets.audio(ResourcePaths::HURT_SFX),
            explode: assets.audio(ResourcePaths::EXPLODE_SFX),
        }
    }
}
